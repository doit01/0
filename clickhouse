spark 等关系型olap方案可以处理海量数据，但无法实时应答，高并发。适合做后端的查询系统。
新一代MOLAP 多维度型，随着维度增加会导致数据的膨胀，一千万的表会膨胀到上亿。
es支持实时更新，只能在百万数据可以做到实时聚合查询。
CK 是ROLAP关系型数据库，在线实时的列式存储，不需要任何数据预处理，支持批量更新，完善sql支持，高可用。
是mysql的400倍，GP的10倍。但是不支持事务，不擅长根据主键按行查询删除。
按列存储一个优势是对数据压缩友好。

顺序存储查询性能更高，顺序读会用更少的磁盘寻道（机械硬盘），并可利用操作系统的文件缓存的预读功能。
mysql如果单线程写入，并且写入没有数增删更新，那是顺序写入并落盘的。实际是不可能的。

CK的数据分片（逻辑概念）：每个集群多个节点，每个节点对应一个分片
本地表等于一份数据分片，分布式表不存任何数据，是本地表的代理，类似中间件。
内存中一列数据用column对象表示，如果操作具体数值，用field表示。
为何快：特殊场景特殊优化，比如去重计数函数，数据量小时候用Array ，中等用hashset，大量用hyperloglog算法。
底层接口支持TCP,HTTP ,client交互式基于TCP，jdbc基于HTTP
数据类型：基础性（时间，字符，数字），复合型（Array ，元组，枚举，nested嵌套），特殊类型

CK库的5个库引擎：ordinary（默认，可以使用任意表引擎），
dictionary字典，
memory放临时数据，重启清除 ，
lazy 日志引擎，
mysql 拉去远端mysql数据。

只有合并树家族的表引擎才支持分区表，主键索引，副本，alter操作。
写入一批数据时，数据以数据片段形式写入，并且不可修改，CK会后台定期合并这些片段，合成一个新的片段。
Summing的表隐情会按照排序键自动聚合数据
Replicated支持副本表引擎，大量运用zookeeper 实现多个replicatedMergeTree副本的协同，包括主副本选举，副本状态感知，
任务队列，操作日志分发。

物化视图有独立存储，特殊的数据表，并且支持表引擎；普通视图只是简单的查询代理，简化查询，对性能没有增强。
DDL语句转换成分布式执行：加上on cluster 声明即可，会把ddl语句广播到其他节点。
